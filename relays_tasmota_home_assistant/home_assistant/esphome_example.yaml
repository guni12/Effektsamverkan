esphome:
  name: 4-ch-relay
  friendly_name: 4_ch_relay

esp8266:
  board: esp01_1m

# Enable logging
logger:
  baud_rate: 0 #need this to free up UART pins

# Enable Home Assistant API
api:
  encryption:
    key: "xxx_something_created_by_esphome"

ota:
  password: "xxx_something_else_created_by_esphome"
  on_begin:
    then:
      - logger.log: "OTA start"
  on_progress:
    then:
      - logger.log:
          format: "OTA progress %0.1f%%"
          args: ["x"]
  on_end:
    then:
      - logger.log: "OTA end"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  manual_ip:
    static_ip: x.x.x.x
    gateway: x.x.x.x
    subnet: 255.255.255.0

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "4-Ch-Relay"
    password: "xxx_created_by_esphome"

captive_portal:


uart:
  id: relay_test
  baud_rate: 115200 # perhaps change baudrate for your card?
  tx_pin: GPIO1
  rx_pin: GPIO3
  debug:
    direction: BOTH
    dummy_receiver: true
    after:
      delimiter: "\n"
    sequence:
      - lambda: |-
          UARTDebug::log_hex(direction, bytes, ',');
          UARTDebug::log_string(direction, bytes);
          UARTDebug::log_int(direction, bytes, ',');
          UARTDebug::log_binary(direction, bytes, ',');

  
switch:
  - platform: template
    optimistic: true
    name: 'relay1'
    id: relay1
    turn_on_action:
      - uart.write: [0xA0, 0x01, 0x01, 0xA2]
      - logger.log: 
          format: "Send cmd to Relay1: Set relay1 on"
    turn_off_action:
      - uart.write: [0xA0, 0x01, 0x00, 0xA1]
      - logger.log: 
          format: "Send cmd to Relay1: Set relay1 off"
    
  - platform: template
    name: 'relay2'
    id: relay2
    turn_on_action:
      - uart.write: [0xA0, 0x02, 0x01, 0xA3]
      - logger.log: 
          format: "Send cmd to Relay2: Set relay2 on"
    turn_off_action:
      - uart.write: [0xA0, 0x02, 0x00, 0xA2]
      - logger.log: 
          format: "Send cmd to Relay2: Set relay2 off"
    optimistic: true

  - platform: template
    name: 'relay3'
    id: relay3
    turn_on_action:
      - uart.write: [0xA0, 0x03, 0x01, 0xA4]
      - logger.log: 
          format: "Send cmd to Relay3: Set relay3 on"           
    turn_off_action:
      - uart.write: [0xA0, 0x03, 0x00, 0xA3]
      - logger.log: 
          format: "Send cmd to Relay3: Set relay3 off"
    optimistic: true

  - platform: template
    name: 'relay4'
    id: relay4
    turn_on_action:
      - uart.write: [0xA0, 0x04, 0x01, 0xA5]
      - logger.log: 
          format: "Send cmd to Relay4: Set relay4 on"
    turn_off_action:
      - uart.write: [0xA0, 0x04, 0x00, 0xA4]
      - logger.log: 
          format: "Send cmd to Relay4: Set relay4 off"
    optimistic: true



  - platform: restart
    name: "4switch_a Restart"


time:
  - platform: homeassistant
    id: homeassistant_time

# Text sensors with general information.
text_sensor:
  # Expose ESPHome version as sensor.
  - platform: version
    name: Relay ESPHome Version
  # Expose WiFi information as sensors.
  - platform: wifi_info
    ip_address:
      name: Relay IP
    bssid:
      name: Relay BSSID

# Sensors with general information.
sensor:
  # Uptime sensor.
  - platform: uptime
    name: Relay Uptime

  # WiFi Signal sensor.
  - platform: wifi_signal
    name: Relay WiFi Signal
    update_interval: 60s

  - platform: homeassistant
    id: bor1
    entity_id: input_number.bor1
    unit_of_measurement: "°C"
    on_value:
      then:
        - if:
            condition:
              and:
                - lambda: return id(vindstyrka1).state < x;
                - switch.is_off: relay1
            then:
              - uart.write: [0xA0, 0x01, 0x01, 0xA2]
              - switch.template.publish:
                  id: relay1
                  state: ON
              - logger.log: "Turning on bor1"
        - if:
            condition:
              and:
                - lambda: return id(vindstyrka1).state > x;
                - switch.is_on: relay1
            then:
              - uart.write: [0xA0, 0x01, 0x00, 0xA1]
              - switch.template.publish:
                  id: relay1
                  state: OFF
              - logger.log: "Turning off bor1"

  - platform: homeassistant
    id: bor2
    entity_id: input_number.bor2
    unit_of_measurement: "°C"
    on_value:
      then:
        - if:
            condition:
              and:
                - lambda: return id(vindstyrka2).state < x;
                - switch.is_off: relay2
            then:
              - uart.write: [0xA0, 0x02, 0x01, 0xA3]
              - switch.template.publish:
                  id: relay2
                  state: ON
              - logger.log: "Turning on bor2"
        - if:
            condition:
              and:
                - lambda: return id(vindstyrka2).state > x;
                - switch.is_on: relay2
            then:
              - uart.write: [0xA0, 0x02, 0x00, 0xA2]
              - switch.template.publish:
                  id: relay2
                  state: OFF
              - logger.log: "Turning off bor2"

  - platform: homeassistant
    id: bor3
    entity_id: input_number.bor3
    unit_of_measurement: "°C"
    on_value:
      then:
        - if:
            condition:
              and:
                - lambda: return id(vindstyrka3).state < x;
                - switch.is_off: relay3
            then:
              - uart.write: [0xA0, 0x03, 0x01, 0xA4]
              - switch.template.publish:
                  id: relay3
                  state: ON
              - logger.log: "Turning on bor3"
        - if:
            condition:
              and:
                - lambda: return id(vindstyrka3).state > x;
                - switch.is_on: relay3
            then:
              - uart.write: [0xA0, 0x03, 0x00, 0xA3]
              - switch.template.publish:
                  id: relay3
                  state: OFF
              - logger.log: "Turning off bor3"

  - platform: homeassistant
    id: bor4
    entity_id: input_number.bor4
    unit_of_measurement: "°C"
    on_value:
      then:
        - if:
            condition:
              and:
                - lambda: return id(vindstyrka4).state < x;
                - switch.is_off: relay4
            then:
              - uart.write: [0xA0, 0x04, 0x01, 0xA5]
              - switch.template.publish:
                  id: relay4
                  state: ON
              - logger.log: "Turning on bor4"
        - if:
            condition:
              and:
                - lambda: return id(vindstyrka4).state > x;
                - switch.is_on: relay4
            then:
              - uart.write: [0xA0, 0x04, 0x00, 0xA4]
              - switch.template.publish:
                  id: relay4
                  state: OFF
              - logger.log: "Turning off bor4"


  - platform: homeassistant
    id: vindstyrka1
    entity_id: sensor.vindstyrka1
    unit_of_measurement: "°C"
    on_value:
      then:
        - if:
            condition:
              and:
                - lambda: return id(bor1).state > x;
                - switch.is_off: relay1
            then:
              - uart.write: [0xA0, 0x01, 0x01, 0xA2]
              - switch.template.publish:
                  id: relay1
                  state: ON
              - logger.log: "Turning on bor1"
        - if:
            condition:
              and:
                - lambda: return id(bor1).state < x;
                - switch.is_on: relay1
            then:
              - uart.write: [0xA0, 0x01, 0x00, 0xA1]
              - switch.template.publish:
                  id: relay1
                  state: OFF
              - logger.log: "Turning off bor1"


  - platform: homeassistant
    id: vindstyrka2
    entity_id: sensor.vindstyrka2
    unit_of_measurement: "°C"
    on_value:
      then:
        - if:
            condition:
              and:
                - lambda: return id(bor2).state > x;
                - switch.is_off: relay2
            then:
              - uart.write: [0xA0, 0x02, 0x01, 0xA3]
              - switch.template.publish:
                  id: relay2
                  state: ON
              - logger.log: "Turning on bor2"
        - if:
            condition:
              and:
                - lambda: return id(bor2).state < x;
                - switch.is_on: relay2
            then:
              - uart.write: [0xA0, 0x02, 0x00, 0xA2]
              - switch.template.publish:
                  id: relay2
                  state: OFF
              - logger.log: "Turning off bor2"


  - platform: homeassistant
    id: vindstyrka3
    entity_id: sensor.vindstyrka3
    unit_of_measurement: "°C"
    on_value:
      then:
        - if:
            condition:
              and:
                - lambda: return id(bor3).state > x;
                - switch.is_off: relay3
            then:
              - uart.write: [0xA0, 0x03, 0x01, 0xA4]
              - switch.template.publish:
                  id: relay3
                  state: ON
              - logger.log: "Turning on bor3"
        - if:
            condition:
              and:
                - lambda: return id(bor3).state < x;
                - switch.is_on: relay3
            then:
              - uart.write: [0xA0, 0x03, 0x00, 0xA3]
              - switch.template.publish:
                  id: relay3
                  state: OFF
              - logger.log: "Turning off bor3"


  - platform: homeassistant
    id: vindstyrka4
    entity_id: sensor.vindstyrka4
    unit_of_measurement: "°C"
    on_value:
      then:
        - if:
            condition:
              and:
                - lambda: return id(bor4).state > x;
                - switch.is_off: relay4
            then:
              - uart.write: [0xA0, 0x04, 0x01, 0xA5]
              - switch.template.publish:
                  id: relay4
                  state: ON
              - logger.log: "Turning on bor4"
        - if:
            condition:
              and:
                - lambda: return id(bor4).state < x;
                - switch.is_on: relay4
            then:
              - uart.write: [0xA0, 0x04, 0x00, 0xA4]
              - switch.template.publish:
                  id: relay4
                  state: OFF
              - logger.log: "Turning off bor4"
