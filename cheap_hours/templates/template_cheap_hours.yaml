##########################################################################################
#
#
# Unique settings for each device used
#
# This is for demo
#
# State: True when hour is cheap and chosen
#
# input_number.load_demo_nr_hours: Nr of hours to load, no more than max available spotprice hours can be chosen
# input_number.load_demo_nr_hours_rem: Keeps track of nr hours over night, counts down before midnight, resets at 13:00
# input_number.start_load_demo: If not set, timespan starts from current hour
# input_number.stop_load_demo: If not set, timespan stops at last available hour
# input_boolean.load_demo_only_today: If set, only hours today are included
#
# Attribute: displays chosen hours
#
# Make sure to update the nordpool-sensor to the one you have:
# set np = "sensor.nordpool_kwh_x_x_x_x_x" 
# on line 54 and 140
#
############################################################################################


- sensor:
    - name: "Load demo between hours"
      unique_id: load_demo_between_hours
      state: >-
          {% set cheap_hours = namespace(number=states('input_number.load_demo_nr_hours')) %}
          {% set rem = states('input_number.load_demo_nr_hours_rem')|int(0) %} 
          {% set from = states('input_number.start_load_demo') | int(0) %}
          {% set to = states('input_number.stop_load_demo') | int(0) %}
          {% set today = now().day | int(0) %}
          {% set ldom = states('sensor.last_day_this_month') | int(0) %}  
          {% set hour = now().hour | int(0) %}

          {% if states('input_boolean.load_demo_only_today') == 'on' or hour < 13 %}   
            {% set stopday = today %}
          {% else %}
            {% if today == ldom %}
              {% set stopday = 1 %}
            {% else %}
              {% set stopday = today + 1 %}
            {% endif %} 
          {% endif %}
          
          {%- set stoptoday = stopday | int(0) == today %}
          
          {%- set ns = namespace(hour_price=[], cheapest_hour=False) %}
          {%- set s = namespace(sorted=[]) %} 
          {%- set s2 = namespace(sorted=[]) %}  
          {%- set chosen = namespace(sorted=[]) %} 
          {%- set chosendict = namespace(sorted=[]) %}
          {%- set np = "sensor.nordpool_kwh_se3_sek_3_10_0" %} 
          {%- set tod = state_attr(np,'raw_today') %}
          {%- set tom = state_attr(np,'raw_tomorrow') %}
         
          
          {% if state_attr(np, "tomorrow_valid")==true 
          and stoptoday == False 
          and state_attr(np, "tomorrow")[0]!=None %}          
            {% for i in range(from, 24) %}
              {% if tod[i].value != None %}
                {% set ns.hour_price = ns.hour_price + [{'hour': tod[i].start.hour, 
                'price': tod[i].value,
                'day': tod[i].start.day
                }] %}
              {% endif %}
            {%- endfor -%}
            {% for i in range(0, to+1) %}
              {% if tom[i].value != None %}
                {% set ns.hour_price = ns.hour_price + [{'hour': tom[i].start.hour, 
                'price': tom[i].value,
                'day': tom[i].start.day
                }] %}
              {% endif %}
            {%- endfor -%}
            {% elif (state_attr(np, "tomorrow_valid")==false) or
             (state_attr(np, "tomorrow_valid")==true and stoptoday == True) %}
              {% if from > to %}{% set from = 0 %}{% endif %}
              {% for i in range(from, to+1) %}
                {% if tod[i].value != None %}
                  {% set ns.hour_price = ns.hour_price + [{'hour': tod[i].start.hour, 
                    'price': tod[i].value,
                    'day': tod[i].start.day
                  }] %}
                {% endif %}
              {%- endfor -%}
            {%- else -%}
              {% for i in range(from, to+1) %}
                {% if tod[i].value != None %}
                  {% set ns.hour_price = ns.hour_price + [{'hour': tod[i].start.hour, 
                  'price': tod[i].value,
                  'day': tod[i].start.day
                  }] %}
                {% endif %}
              {%- endfor -%}
            {% endif %}
            
            {% for item in ns.hour_price|sort(attribute="price") %}
              {% set s.sorted = s.sorted + [item] %}
            {% endfor %}

            {% if cheap_hours.number|int(0) > rem %}{% set cheap_hours.number = rem %}{% endif %}
            {% set nr_hours = cheap_hours.number %}
            {% if cheap_hours.number | int > s.sorted|length %}
              {% set nr_hours = ns.hour_price|length %}
            {% else %}
              {% set nr_hours = cheap_hours.number | int(0) %}
            {% endif %}
            {% for each in range(0, nr_hours) %}
              {% set h = s.sorted[each]['hour'] %}
              {% set d = s.sorted[each]['day'] %}
              {% set chosen.sorted = chosen.sorted + [(s.sorted[each])] %}
              {% if h == now().hour and d == now().day %}
                {% set ns.cheapest_hour = True %}
              {% endif %}
              {%- if not loop.last -%}{% endif %}
            {% endfor %}
            {{ ns.cheapest_hour }}
      attributes:
        chosen_hours: >-
          {% set cheap_hours = namespace(number=states('input_number.load_demo_nr_hours')) %}
          {% set rem = states('input_number.load_demo_nr_hours_rem')|int(0) %} 
          {% set from = states('input_number.start_load_demo') | int(0) %}
          {% set to = states('input_number.stop_load_demo') | int(0) %}
          {% set today = now().day | int(0) %}
          {% set ldom = states('sensor.last_day_this_month') | int(0) %} 
          {% set hour = now().hour | int(0) %}

          {% if states('input_boolean.load_demo_only_today') == 'on' or hour < 13 %}        
            {% set stopday = today %}
          {% else %}
            {% if today == ldom %}
              {% set stopday = 1 %}
            {% else %}
              {% set stopday = today + 1 %}
            {% endif %} 
          {% endif %}
          
          {%- set stoptoday = stopday | int(0) == today %}
      
          {%- set ns = namespace(hour_price=[]) %}
          {%- set s = namespace(sorted=[]) %} 
          {%- set s2 = namespace(sorted=[]) %}  
          {%- set chosen = namespace(sorted=[]) %} 
          {%- set chosendict = namespace(sorted=[]) %}
          {%- set np = "sensor.nordpool_kwh_se3_sek_3_10_0" %} 
          {%- set tod = state_attr(np,'raw_today') %}
          {%- set tom = state_attr(np,'raw_tomorrow') %}
         
          {% if state_attr(np, "tomorrow_valid")==true 
          and stoptoday == False 
          and state_attr(np, "tomorrow")[0]!=None %}         
            {% for i in range(from, 24) %}
              {% if tod[i].value != None %}
                {% set ns.hour_price = ns.hour_price + [{'hour': tod[i].start.hour, 
                'price': tod[i].value,
                'day': tod[i].start.day
                }] %}
              {% endif %}
            {%- endfor -%}
            {% for i in range(0, to+1) %}
              {% if tom[i].value != None %}
                {% set ns.hour_price = ns.hour_price + [{'hour': tom[i].start.hour, 
                'price': tom[i].value,
                'day': tom[i].start.day
                }] %}
              {% endif %}
            {%- endfor -%}

            {% elif (state_attr(np, "tomorrow_valid")==false) or
              (state_attr(np, "tomorrow_valid")==true and stoptoday == True) %}
              {% if from > to %}{% set from = 0 %}{% endif %}
              {% for i in range(from, to+1) %}
                {% if tod[i].value != None %}
                  {% set ns.hour_price = ns.hour_price + [{'hour': tod[i].start.hour, 
                  'price': tod[i].value,
                  'day': tod[i].start.day
                  }] %}
                {% endif %}
              {%- endfor -%}

            {%- else -%}
              {% for i in range(from, to+1) %}
                {% if tod[i].value != None %}
                  {% set ns.hour_price = ns.hour_price + [{'hour': tod[i].start.hour, 
                  'price': tod[i].value,
                  'day': tod[i].start.day
                  }] %}
                {% endif %}
              {%- endfor -%}
            {% endif %}

            {% for user in ns.hour_price|sort(attribute="price") %}
              {% set s.sorted = s.sorted + [user] %}
            {% endfor %}

            {% if cheap_hours.number|int(0) > rem %}{% set cheap_hours.number = rem %}{% endif %}
            {% set nr_hours = cheap_hours.number %}
            {% if cheap_hours.number | int > s.sorted|length %}
              {% set nr_hours = ns.hour_price|length %}
            {% else %}
              {% set nr_hours = cheap_hours.number | int(0) %}
            {% endif %}

            {% if nr_hours > 0 %}
              {% for each in range(0, nr_hours) %}
                {% set h = s.sorted[each]['hour'] %}
                {% set d = s.sorted[each]['day'] %}
                {% set chosen.sorted = chosen.sorted + [(s.sorted[each])] %}
                {%- if not loop.last -%}{% endif %}
              {% endfor %}

              {% set sorted = chosen.sorted|sort(attribute='hour') %}
              {% set firstday = chosen.sorted|sort(attribute='day') %}
              {% set first = firstday[0]['day'] %}

              {% for item in range(0, sorted|length) %}
                {% set hour = sorted[item]['hour'] %}
                {% set day = sorted[item]['day'] %}
                {% set price = sorted[item]['price'] %}
              

                {% if sorted[item]['day'] == first %}
                  {% set s2.sorted = s2.sorted + [{'day':day, 'hour':hour, 'price':price}] %}
                 {% else %}
                   {% set chosendict.sorted = chosendict.sorted + [{'day':day, 'hour':hour, 'price':price}] %}
                 {% endif %} 
              {% endfor %}
              {% set chosendict.sorted = s2.sorted + chosendict.sorted %}
            {% endif %}
            {{ chosendict.sorted }}


########################################################################################
# You might want to add sensors, input numbers etc. for your device:
#
# sensor.load_car_between_hours
# input_number.highest_allowed_car_price
# input_number.load_car_nr_hours
# input_number.load_car_nr_hours_rem
# input_number.start_load_car
# input_number.stop_load_car
# input_boolean.load_car_only_today
# For testing: input_boolean.test_car
#
# Sensor above is for demo
#
##########################################################################################


#
# Last day of current month
#
- sensor:
    - name: Last day this month
      unique_id: last_day_this_month
      state: >
        {% set thismonth = now().month %}
        {% set thisyear = now().year %}
        {%- macro last_dayofmonth(month, year) -%}
            {%- set daysinmonths = [31,28,31,30,31,30,31,31,30,31,30,31] -%}
            {%- set month = month|int(0) -%}
            {%- set year = year|int(0) -%}

            {# Simplified leap year calculation. See https://www.mathsisfun.com/leap-years.html #}
            {%- set isleapyear = year % 4 == 0 and (year % 100 != 0 or year % 400 == 0) -%}

            {%- set monthindex = month-1 -%}
            {%- if month == 2 and isleapyear -%}
                {{ daysinmonths[monthindex]+1 }}
            {%- else -%}
                {{ daysinmonths[monthindex] }}
            {%- endif -%}
        {%- endmacro -%}

        {% set last = last_dayofmonth(thismonth, thisyear)  %}
        {{ last }}



#
# State: visar dagens medelpris
#
# Attribut: Sorterade tillgängliga nordpoolpriser enligt pris med dag och tid
#
- sensor:
  - name: "Sorted and average"
    unique_id: sorted_and_average
    state: "{{ state_attr('sensor.nordpool_kwh_se3_sek_3_10_0','average') | round(3) }}"
    attributes:
        hours: >
          {%- set ns = namespace(hour_price=[]) %}
          {%- set ns2 = namespace(hour_price2=[]) %}
          {% set ldom = states('sensor.last_day_this_month') | int(0) %}
          {%- set np = "sensor.nordpool_kwh_se3_sek_3_10_0" %} 
          {% set tom = now().day + 1 %}
          {% if now().day == ldom %}
             {% set tom = 1 %}
          {% endif %}
          {%- set tod = state_attr(np,'raw_today') %}
          {%- set tomr = state_attr(np,'raw_tomorrow') %}
          {%- set s = namespace(sorted=[]) %} 
          {%- set s2 = namespace(sorted=[]) %}  
          {%- set chosen = namespace(sorted=[]) %} 
          {%- set chosendict = namespace(sorted=[]) %}
          
          {% if state_attr(np, "tomorrow_valid")==true and state_attr(np, "tomorrow")[0]!=None %}
            {% for i in range(now().hour, 24) %}
              {% if state_attr(np, "raw_tomorrow")[i].value != None %}
                {% set ns.hour_price = ns.hour_price + [{'hour': tod[i].start.hour, 
                'price': tod[i].value,
                'day': tod[i].start.day
                }] %}
              {% endif %}
            {%- endfor -%}
            {% for i in range(0, 24) %}
              {% if state_attr(np, "raw_tomorrow")[i].value != None %}
                {% set ns.hour_price = ns.hour_price + [{'hour': tomr[i].start.hour, 
                'price': tomr[i].value,
                'day': tomr[i].start.day
                }] %}
              {% endif %}
            {%- endfor -%}

          {% else %}
             {% for i in range(now().hour, 24) %}
               {% if state_attr(np, "raw_today")[i].value != None %}
                {% set ns.hour_price = ns.hour_price + [{'hour': tod[i].start.hour, 
                'price': tod[i].value,
                'day': tod[i].start.day
                }] %}
               {% endif %}
            {%- endfor -%}
          {% endif %}
          
          {% for user in ns.hour_price|sort(attribute="price") %}
            {% set s.sorted = s.sorted + [user] %}
          {% endfor %}
          
          {% for each in range(0, s.sorted|length) %}
            {% set h = s.sorted[each]['hour'] %}
            {% set d = s.sorted[each]['day'] %}
            {% set chosen.sorted = chosen.sorted + [(s.sorted[each])] %}
            {%- if not loop.last -%}{% endif %}
          {% endfor %}

          {% set sorted = chosen.sorted|sort(attribute='hour') %}
          {% set firstday = chosen.sorted|sort(attribute='day') %}
          {% set first = firstday[0]['day'] %}

          {% for item in range(0, sorted|length) %}
            {% set hour = sorted[item]['hour'] %}
            {% set day = sorted[item]['day'] %}
            {% set price = sorted[item]['price'] %}


            {% if sorted[item]['day'] == first %}
              {% set s2.sorted = s2.sorted + [{'day':day, 'hour':hour, 'price':price}] %}
            {% else %}
              {% set chosendict.sorted = chosendict.sorted + [{'day':day, 'hour':hour, 'price':price}] %}
            {% endif %} 
          {% endfor %}
          {% set chosendict.sorted = s2.sorted + chosendict.sorted %}
          {{ chosendict.sorted }}